# Copyright 2021 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
# =============================================================================

load("@bazel_skylib//rules:copy_file.bzl", "copy_file")
load("@build_bazel_rules_nodejs//:index.bzl", "js_library", "pkg_npm")
load("//tools:copy_to_dist.bzl", "copy_to_dist", "copy_ts_library_to_dist")
load("//tools:tfjs_bundle.bzl", "tfjs_bundle")
load("//tools:tfjs_web_test.bzl", "tfjs_web_test")

package(default_visibility = ["//visibility:public"])

exports_files(["package.json"])

tfjs_bundle(
    name = "tf",
    entry_point = "//tfjs/src:index.ts",
    external = [
        "crypto",
        "node-fetch",
        "util",
        "fs",
        "buffer",
    ],
    umd_name = "tf",
    deps = [
        "//tfjs/src:tfjs_lib",
    ],
)

copy_ts_library_to_dist(
    name = "copy_src_to_dist",
    srcs = [
        "//tfjs/src:tfjs_lib",
        "//tfjs/src:tfjs_src_lib",
    ],
    root = "src",
)

filegroup(
    name = "custom_module_commonjs",
    srcs = [
        "//tfjs/tools/custom_module:custom_module_lib",
    ],
    output_group = "es5_sources",
)

copy_to_dist(
    name = "copy_custom_module",
    srcs = [
        ":custom_module_commonjs",
        "//tfjs/tools/custom_module:custom_module_lib",
    ],
)

copy_to_dist(
    name = "copy_bundles",
    srcs = [
        ":tf",
        ":tf.es2017",
        ":tf.es2017.min",
        ":tf.fesm",
        ":tf.fesm.min",
        ":tf.min",
        ":tf.node",
    ],
)

copy_file(
    name = "copy_miniprogram",
    src = ":tf.min.js",
    out = "dist/miniprogram/index.js",
)

copy_file(
    name = "copy_miniprogram_map",
    src = ":tf.min.js.map",
    out = "dist/miniprogram/index.js.map",
)

copy_file(
    name = "copy_root_readme",
    src = "//:README.md",
    out = "README.md",
)

pkg_npm(
    name = "tfjs_pkg",
    package_name = "@tensorflow/tfjs",
    srcs = [
        "package.json",
    ],
    tags = ["ci"],
    deps = [
        ":copy_bundles",
        ":copy_custom_module",
        ":copy_miniprogram",
        ":copy_miniprogram_map",
        ":copy_root_readme",
        ":copy_src_to_dist",
    ],
)

js_library(
    name = "package_json",
    srcs = [
        "package.json",
    ],
)

tfjs_web_test(
    name = "tfjs_test",
    srcs = [
        "//tfjs/src:tfjs_test_bundle",
    ],
    static_files = [
        "//tfjs/src:tfjs_test_bundle",
    ],
)
