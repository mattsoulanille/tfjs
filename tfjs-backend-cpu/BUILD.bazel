load("@build_bazel_rules_nodejs//:index.bzl", "js_library")
load("@npm//@bazel/typescript:index.bzl", "ts_project")
load("//:esbuild.bzl", "esbuild")

package(default_visibility = ["//visibility:public"])

ts_project(
    name = "tfjs-backend-cpu_lib",
    srcs = glob(["src/**/*.ts"]),
    declaration = True,
    extends = "//:tsconfig.json",
    incremental = True,
    out_dir = "dist",
    root_dir = "src",
    source_map = True,
    tsconfig = "tsconfig.json",
    deps = [
        "//tfjs-core",
        "@npm//@types/jasmine",
        "@npm//jasmine",
    ],
)

esbuild(
    name = "tf-backend-cpu.min",
    entry_point = "dist/index.ts",
    external = [
        "node-fetch",
        "util",
    ],
    minify = True,
    sources_content = True,
    deps = [
        ":tfjs-backend-cpu_lib",
    ],
)

esbuild(
    name = "tf-backend-cpu.node",
    entry_point = "dist/index.ts",
    external = [
        "node-fetch",
        "util",
    ],
    sources_content = True,
    deps = [
        ":tfjs-backend-cpu_lib",
    ],
)

js_library(
    name = "tfjs-backend-cpu",
    package_name = "@tensorflow/tfjs-backend-cpu",
    srcs = [
        "package.json",
    ],
    deps = [
        ":tf-backend-cpu.min",
        ":tf-backend-cpu.node",
        ":tfjs-backend-cpu_lib",
    ],
)
